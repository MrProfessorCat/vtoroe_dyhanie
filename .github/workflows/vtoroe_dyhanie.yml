name: Vtoroe_dyhanie

# Workflow будет срабатывать на команду push в ветку develop
on:
  push:
    branches: [ develop ]

# После срабатывания "on" выполнятся следующие действия:
jobs:
  # Проверяем код в папке src/ с помощью flake8
  tests:
    name: Code test
    # «Раннер» — создание изолированного окружения с последней версией Ubuntu 
    runs-on: ubuntu-latest

    steps:
    # Запуск actions checkout — готового скрипта 
    # для клонирования репозитория
    - uses: actions/checkout@v3
    - name: Set up Python
      # Запуск actions setup-python — готового скрипта 
      # для развёртывания окружения Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Install dependencies
      run: | 
        python -m pip install --upgrade pip 
        pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort mypy
        pip install -r requirements.txt 

    - name: Test with flake8
      run: |
        cd src/
        python -m flake8

  build_and_push:
      # Собираем образ контейнера и отправляем его на GitHub
      name: Build and push docker image to DockerHub
      runs-on: ubuntu-latest
      needs: tests
      steps:
        - name: Check out the repo
          uses: actions/checkout@v3
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v3
        - name: Login to Docker 
          uses: docker/login-action@v2
          with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}
        - name: Push to Docker Hub
          uses: docker/build-push-action@v4
          with:
            file: ./infra/Dockerfile
            push: true
            tags: ${{ secrets.DOCKER_USERNAME }}/vtordish:latest

  deploy:
    # На сервере разворачиваем контейнер с ботом
    # docker-compose.yaml должен находиться в рабочей директории на сервере
    name: Deploy bot with docker container on server
    # На Этапе разработки стоит условие, что push должен осуществляться в ветку develop
    # После тестирования необходимо поменять на master
    if: github.ref_name == 'develop'
    runs-on: ubuntu-latest
    needs: build_and_push
    steps:
    - name: Executing remote ssh commands to deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.PASSPHRASE }}
        script: |
            mkdir -p /home/vtoroe_dyhanie && cd $_
            echo TELEGRAM_TOKEN=${{ secrets.TELEGRAM_TOKEN }} >> .env
            docker-compose rm -fsv
            docker rmi $(docker images -aq)
            docker-compose up -d 

  send_message:
    # Через наш телеграм-бот отправим разработчику сообщение об успешном деплое
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: Send message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: ${{ github.workflow }} успешно выполнен!
